"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
from datetime import timedelta
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Environment variables
env = environ.Env(
    DEBUG=(bool, True),
    SECRET_KEY=(str, 'django-insecure-default-key-change-in-production'),
    ALLOWED_HOSTS=(list, ['localhost', '127.0.0.1']),
    DATABASE_URL=(str, f'sqlite:///{BASE_DIR}/db.sqlite3'),
    REDIS_URL=(str, 'redis://localhost:6379/0'),
)

# Take environment variables from .env file if it exists
env_file = BASE_DIR / '.env'
if env_file.exists():
    environ.Env.read_env(env_file)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ["*"]
CSRF_TRUSTED_ORIGINS = [
    "http://100.106.222.119:8000",
    "https://100.106.222.119:8000",
    "http://api-corebackend.kancralabs.com",
    "https://api-corebackend.kancralabs.com",
]



# Application definition
DJANGO_APPS = [
    'unfold',  # Unfold admin theme (must be before django.contrib.admin)
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'django_extensions',
    'drf_spectacular',
]

LOCAL_APPS = [
    'api',
    'brokers',
    'profiles',
    'authentication',
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': env.db()
}

# Cache
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': env('REDIS_URL'),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Using Django's built-in User model with Profile extension
# AUTH_USER_MODEL = 'users.User'  # Commented out to use Django's default User

# JWT Settings
# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
#     'ROTATE_REFRESH_TOKENS': True,
#     'BLACKLIST_AFTER_ROTATION': True,
#     'UPDATE_LAST_LOGIN': True,
#     'ALGORITHM': 'HS256',
#     'SIGNING_KEY': SECRET_KEY,
#     'VERIFYING_KEY': None,
#     'AUDIENCE': None,
#     'ISSUER': None,
#     'JSON_ENCODER': None,
#     'JWK_URL': None,
#     'LEEWAY': 0,
#     'AUTH_HEADER_TYPES': ('Bearer',),
#     'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
#     'USER_ID_FIELD': 'id',
#     'USER_ID_CLAIM': 'user_id',
#     'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',
#     'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#     'TOKEN_TYPE_CLAIM': 'token_type',
#     'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',
#     'JTI_CLAIM': 'jti',
#     'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
#     'SLIDING_TOKEN_LIFETIME': timedelta(minutes=60),
#     'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=7),
# }

# Django REST Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}

# DRF Spectacular (Swagger) Settings
SPECTACULAR_SETTINGS = {
    'TITLE': 'Core Backend API',
    'DESCRIPTION': 'A Django REST API with JWT authentication, Docker containerization, and modern development practices.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'COMPONENT_SPLIT_REQUEST': True,
    'SCHEMA_PATH_PREFIX': '/api/',
    'SECURITY': [
        {
            'type': 'http',
            'scheme': 'bearer',
            'bearerFormat': 'JWT',
        }
    ],
    'AUTHENTICATION_WHITELIST': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

# CORS settings
# ...existing code...
# CORS settings (env-driven)
CORS_ALLOW_ALL_ORIGINS = env.bool('CORS_ALLOW_ALL_ORIGINS', default=DEBUG)

CORS_ALLOWED_ORIGINS = env.list('CORS_ALLOWED_ORIGINS', default=[
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://100.106.222.119:8000",
    "https://100.106.222.119:8000",
    "http://api-corebackend.kancralabs.com",
    "https://api-corebackend.kancralabs.com",

])

# ...existing code...
# Celery Configuration
CELERY_BROKER_URL = env('REDIS_URL')
CELERY_RESULT_BACKEND = env('REDIS_URL')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# Logging
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {message}',
#             'style': '{',
#         },
#     },
#     'handlers': {
#         'file': {
#             'level': 'INFO',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR / 'logs' / 'django.log',
#             'formatter': 'verbose',
#         },
#         'console': {
#             'level': 'INFO',
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple',
#         },
#     },
#     'root': {
#         'handlers': ['console'],
#         'level': 'INFO',
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'INFO',
#             'propagate': False,
#         },
#     },
# }

# # =============================================================================
# # UNFOLD ADMIN CONFIGURATION
# # =============================================================================

# UNFOLD = {
#     "SITE_TITLE": "Core Backend Admin",
#     "SITE_HEADER": "Core Backend",
#     "SITE_URL": "/",
#     "SITE_ICON": lambda request: static("img/logo.svg"),  # both modes, optimally SVG format
#     # "SITE_ICON": {
#     #     "light": lambda request: static("img/logo-light.svg"),  # light mode
#     #     "dark": lambda request: static("img/logo-dark.svg"),  # dark mode
#     # },
#     "SITE_LOGO": lambda request: static("img/logo.svg"),  # both modes, optimally SVG format
#     # "SITE_LOGO": {
#     #     "light": lambda request: static("img/logo-light.svg"),  # light mode
#     #     "dark": lambda request: static("img/logo-dark.svg"),  # dark mode
#     # },
#     "SITE_SYMBOL": "speed",  # symbol from icon set
#     "SHOW_HISTORY": True, # show/hide "History" button, default: True
#     "SHOW_VIEW_ON_SITE": True, # show/hide "View on site" button, default: True
#     "ENVIRONMENT": "core.utils.environment_callback",
#     "DASHBOARD_CALLBACK": "core.utils.dashboard_callback",
#     "LOGIN": {
#         "redirect_after": lambda request: reverse_lazy("admin:index"),
#     },
#     "STYLES": [
#         lambda request: static("css/styles.css"),
#     ],
#     "SCRIPTS": [
#         lambda request: static("js/script.js"),
#     ],
#     "COLORS": {
#         "primary": {
#             "50": "250 245 255",
#             "100": "243 232 255", 
#             "200": "233 213 255",
#             "300": "216 180 254",
#             "400": "196 141 253",
#             "500": "168 85 247",
#             "600": "147 51 234",
#             "700": "126 34 206",
#             "800": "107 33 168",
#             "900": "88 28 135",
#             "950": "59 7 100",
#         },
#     },
#     "EXTENSIONS": {
#         "modeltranslation": {
#             "flags": {
#                 "en": "🇺🇸",
#                 "fr": "🇫🇷",
#                 "nl": "🇳🇱",
#             },
#         },
#     },
#     "SIDEBAR": {
#         "show_search": True,  # Search in applications and models names
#         "show_all_applications": True,  # Dropdown with all applications and models
#         "navigation": [
#             {
#                 "title": _("Navigation"),
#                 "separator": True,  # Top border
#                 "items": [
#                     {
#                         "title": _("Dashboard"),
#                         "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
#                         "link": reverse_lazy("admin:index"),
#                         "permission": lambda request: request.user.is_superuser,
#                     },
#                 ],
#             },
#             {
#                 "title": _("Users & Authentication"),
#                 "separator": True,
#                 "collapsible": True,
#                 "items": [
#                     {
#                         "title": _("Users"),
#                         "icon": "people",
#                         "link": reverse_lazy("admin:users_user_changelist"),
#                     },
#                     {
#                         "title": _("Groups"),
#                         "icon": "group",
#                         "link": reverse_lazy("admin:auth_group_changelist"),
#                     },
#                 ],
#             },
#             {
#                 "title": _("Brokers & Marketplace"),
#                 "separator": True,
#                 "collapsible": True,
#                 "items": [
#                     {
#                         "title": _("Categories"),
#                         "icon": "category",
#                         "link": reverse_lazy("admin:brokers_category_changelist"),
#                     },
#                     {
#                         "title": _("Products"),
#                         "icon": "shopping_cart",
#                         "link": reverse_lazy("admin:brokers_product_changelist"),
#                     },
#                     {
#                         "title": _("Product Images"),
#                         "icon": "image",
#                         "link": reverse_lazy("admin:brokers_productimage_changelist"),
#                     },
#                     {
#                         "title": _("Product Views"),
#                         "icon": "visibility",
#                         "link": reverse_lazy("admin:brokers_productview_changelist"),
#                     },
#                     {
#                         "title": _("Product Inquiries"),
#                         "icon": "help",
#                         "link": reverse_lazy("admin:brokers_productinquiry_changelist"),
#                     },
#                 ],
#             },

#         ],
#     },
#     "TABS": [
#         {
#             "models": [
#                 "users.user",
#             ],
#             "items": [
#                 {
#                     "title": _("User Details"),
#                     "icon": "person",
#                     "link": reverse_lazy("admin:users_user_changelist"),
#                 },
#                 {
#                     "title": _("User Groups"),
#                     "icon": "group",
#                     "link": reverse_lazy("admin:auth_group_changelist"),
#                 },
#             ],
#         },
#     ],
# }
